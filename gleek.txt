// *** PLAYER CONTROLLER ***
PlayerController
	-clientService: ClientService
	-playersService: PlayersService
	-raceService: RaceService
	+onClientStateChanged()
	+onClientConnected()
PlayerService
	-apiService: ApiService
	-coingeckoService: CoingeckoService
	+fetchDocuments()
	+mapDocument()
PegaDocument
	-address: string
	-earnedVisFiat: number
	-earnedVis: number
	-fiatSymbol: string
	-pegasOwned: number
PlayerUI
	+element()
PlayerController --> PlayerService
PlayerController --> PlayerUI
PlayerService --> PegaDocument
PlayerService --> ApiService
PlayerController --> PegaDocument
PlayerUI --> PegaDocument

// *** PLAYERS CONTROLLER ***
PlayersController
	-clientService: ClientService
	-playersService: PlayersService
	+onClientStateChanged()
	+onClientConnected()
PlayersService
	-apiService: ApiService
	-marketBuyRepository: MarketBuyRepository
	-coingeckoService: CoingeckoService
	+fetchDocuments()
PlayersDocument
	-address: string
	-earnedVisFiat: number
	-earnedVis: number
	-fiatSymbol: string
	-pegasOwned: number
PlayersUI
	+element()
PlayersController --> PlayersService
PlayersController --> PlayersUI
PlayersController --> PlayersDocument
PlayersService --> PlayersDocument
PlayersService --> ApiService
PlayersService --> MarketBuyRepository
PlayersUI --> PlayersDocument
PlayerUI --> RaceUI
PlayerController --> RaceService

// *** RACE ***
RaceService
	-apiService: ApiService
	-coingeckoService: CoingeckoService
RaceDocument
	-class: number
	-distance: number
	-earned: number
	-earnedFiat: number
	-fiatSymbol: string
	-playerAddress:string
	-position: number
	-timestamp: number
RaceUI
	+element()
RaceService --> RaceDocument
RaceService --> ApiService
RaceUI --> RaceDocument

// *** MARKET HISTORY ***
MarketHistoryController
	-clientService: ClientService
	-marketBuysService: MarketBuysService
	-apmService: ApmService
	+onClientStateChanged()
	+onClientConnected()
MarketHistoryService
	-marketBuyRepository: MarketBuyRepository
	-coingeckoService: CoingeckoService
	-apiService: ApiService
	+fetchMarketHistogram()
	+fetchMarketDocuments()
	+mapToDocuments()
MarketHistoryDocument
	-bloodline: string
	-breedType: string
	-buyer: string
	-class: number
	-fiatSymbol: string
	-gender: string
	-pegaAvatarId: string
	-pegaAvatarId1: string
	-pegaAvatarId2: string
	-pegaId: number
	-pegaName: string
	-priceFiat: number
	-timestamp: number
MarketHistoryUI
	-element()
MarketHistoryController --> MarketHistoryService
MarketHistoryController --> MarketHistoryUI
MarketHistoryController --> MarketHistoryDocument
MarketHistoryService --> MarketHistoryDocument
MarketHistoryUI --> MarketHistoryDocument
MarketHistoryService --> MarketHistoryRepository 

// *** MARKET BUY DB ***
MarketBuy
	-id: string
	-created: Date
	-updated: Date
	-buyer_address: string
	-price: string
	-price_coin_id: string
	-pega_token_id: number
	-pega: Pega
MarketBuyRepository
	-repo: Repository
	-manager: EntityManager
	+findAll()
	+fetchPegaCost()
	+save()
MarketBuyRepository --> MarketBuy

// *** MARKET ALERT ***
MarketAlertRepository
	-pegaRepository: Repository
	+findAll()
	+save()
MarketAlertConfig
	-bloodLine: string
	-breed: string
	-gender: string
	-price_min: number
	-price_max: number
	-alert_address: number
	-alert_discord_id: number
MarketAlertRepository --> MarketAlertConfig

// *** PEGA DB ***
Pega
	-avatar_id_1: string
	-avatar_id_2: string
	-bloodline: string
	-breed_type: string
	-class: number
	-cost_coin_id: string
	-cost: string
	-created: Date
	-earned_to_date_coin_id: string
	-earned_to_date: string
	-father_id: number
	-gender: string
	-id: number
	-market_value_coin_id: string
	-market_value: string
	-mother_id: number
	-name: string
	-owner_player_id: string
	-place_rate: number
	-total_races: number
	-updated: Date
PegaRepository
	+findLatest()
	+save()
PegaRepository -->Pega

// *** PLAYER DB ***
Player
	-id: string
	-created: Date
	-updated: Date
	-address: string
	-earned_to_date: string
	-earned_to_date_coin_id: string
PlayerRepository
	+findLatest()
	+save()
PlayerRepository -->Player

// *** API SERVICE ***
ApiService
	-configService: EkConfigService
	-cacheService: CacheService
	+apiBuilder
	+fecthUserAssets
	+fetchMarketVaule
	+fetchPegaEarnings
	+fetchPegaGameDetail
	+fetchPegaRaceHistory
	+fetchRaceDetail
	+fetchUserEarnings
	+fetchUserEarningsInLast24h
	+fetchUserOwnedPegas
ApiBuilder
	-configService: EkConfigService
	-cacheService: CacheService
	-options: object
	+proxy()
	+limit()
	+retry()
	+cache()
	+get()
	+page()
ApiService --> ApiBuilder